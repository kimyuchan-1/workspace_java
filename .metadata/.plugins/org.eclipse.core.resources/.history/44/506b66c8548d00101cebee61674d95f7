package com.ruby.java.ch06객체구현.정적메소드;
class Student {
	// 필드
	/*
	 * name, age, subjects[], scores[], passFail[], count를 private으로 선언
	 * count는 배열의  index로 사용
	 * numberStudents를 정적 필드로 선언
	 */
	private String name;
	private int age;
	private String[] subjects;
	private int[] scores;
	private int[] passFail;
	private int count;
	static int numberStudents = 0;
	
	// 생성자
	/*name, age, subjects[], scores[], passFail[], count를 매개변수로 전달받는 생성자 정의
	 * 
	 */
	public Student(String name, int age, String[] subjects, int[] scores, int[] passFail, int count) {
		this.name = name;
		this.age = age;
		this.subjects = subjects;
		this.scores = scores;
		this.passFail = passFail;
		this.count= count;
	}
	
	// setter 메소드: setName(String name), setAge(int age),  setSubjects(String subjects[]), setScores(int scores[]), setCount(int num)
	public void setName(String name) {
		this.name = name;
	}
	public void setAge(int age) {
		this.age = age;
	}
	public void setSubjects(String[] subjects) {
		this.subjects = subjects;
	}
	public void setScores(int[] scores) {
		this.scores = scores;
	}
	public void setCount(int count) {
		this.count = count;
	}
	
	
	// 학생 수를 반환하는 정적 메소드getNumberStudents()
	static void getNumberStudents(int num) {
		numberStudents = num;
	}
	
	
		
	
	// 학생 정보를 출력하는 메소드 (예시용)
	public void printStudent() {
		/*
		 * 이름 = **, 나이 = **
		 * 과목1 = **, 점수1 = **
		 * 과목2 = **, 점수2 = **
		 * ... 등으로 출력
		 */
		System.out.println("이름 = "+name+", 나이 = "+age);
		for (int i = 0; i < subjects.length; i++) {
			System.out.println("과목"+(i+1)+" = "+subjects[i]+", 점수"+(i+1)+" = "+scores[i]);
		}
	}

	// 학생 정보를 출력하는 메소드 (예시용)
	public void printStudentInfo() {
		/*
		 * 이름 = **, 나이 = **
		 * 과목1 = **, 점수1 = **, 통과여부=pass
		 * 과목2 = **, 점수2 = **, 통과여부=fail
		 * ... 등으로 출력
		 */
		System.out.println("이름 = "+name+", 나이 = "+age);
		for (int i = 0; i < subjects.length; i++) {
			System.out.println("과목"+(i+1)+" = "+subjects[i]+", 점수"+(i+1)+" = "+scores[i]+", 통과여부 = "+(isPassed()[i]?"pass":"fail"));
		}
	}

	// 통과 여부 (모든 과목을 통과했는지 확인)
	public boolean[] isPassed() {
		//주어진 학생이 모든 과목 통여 여부를 반환 
		boolean result[] = new boolean[passFail.length];
		for (int i = 0; i < passFail.length; i++) {
			if (scores[i] >= passFail[i]) {
				result[i] = true;
			} else result[i] = false;
		}
		return result;
	}

	// 6.2.2 각 학생의 성적 테이블을 출력하는 정적 메소드
	public static void printAllStudents(Student[] students) {
		//학생 이름 + 과목명, 과목 점수 .... + 과목통과여부:pass or fail
		for (int i = 0; i < students.length; i++) {
			System.out.print(students[i].name+" - ");
			for (int j = 0; j < students[i].subjects.length; j ++) {
				String ps = students[i].isPassed()[j]?"pass":"fail";
				System.out.print(students[i].subjects[j]+": "+students[i].scores[j]+", 과목통과여부: "+ps+" ");
			}
			System.out.println();
		}
		System.out.println("-".repeat(25));
	}

	// 6.2.2 과목별 최대/최소 점수 및 해당 학생을 출력하는 정적 메소드
	public static void printSubjectStats(Student[] students) {
		int max[] = new int[students[0].subjects.length];
		int min[] = new int[students[0].subjects.length];
		String maxStd[] = new String[students[0].subjects.length];
		String minStd[] = new String[students[0].subjects.length];
		
		for (int i = 0; i < students[0].subjects.length; i++) {
			max[i] = students[0].scores[i];
			min[i] = students[0].scores[i];
			maxStd[i] = students[0].name;
			minStd[i] = students[0].name;
			
		}
		
		for (int i = 0; i < students[0].subjects.length; i++) {
			for (Student s : students) {
				if (max[i] <= s.scores[i]) {
					max[i] = s.scores[i];
					maxStd[i] = s.name;
				}
				if (min[i] >= s.scores[i]) {
					min[i] = s.scores[i];
					minStd[i] = s.name;
				}
			}
		}
		for (int j = 0; j < max.length; j++) {
			System.out.println(students[0].subjects[j]+" 최대 점수: "+max[j]+"/"+maxStd+", 최소 점수: "+min[j]+"/"+minStd);
		}
	}
}
public class 실습_6_3정적메소드 {
	
	static void showStudents(Student[] students) {
		for (Student s : students) {
			s.printStudentInfo();
			System.out.println("-".repeat(25));

		}
	}
	
	public static void main(String[] args) {
		
		String[] subjects = {"수학", "국어", "영어", "과학", "역사"};
		int []passFails = {70,70,60,90,80};
		Student[] students = { 
				
				new Student("홍길동", 21, subjects, new int[]{85, 90, 78, 88, 92},passFails, -1),
				new Student("김유신", 22, subjects, new int[]{75, 80, 85, 90, 95}, passFails,-1),
				new Student("계백", 23, subjects, new int[]{65, 70, 75, 80, 85}, passFails,-1),
				new Student("강감찬", 24, subjects, new int[]{95, 92, 88, 84, 91}, passFails,-1),
				new Student("을지문덕", 25, subjects, new int[]{88, 76, 85, 79, 90}, passFails,-1),

		};

		// 학생 수를 정적 메소드 호출로 처리
		Student.getNumberStudents(students.length);
		
		// 학생 정보 출력 (예시)
		showStudents(students);

		// 각 학생의 성적 테이블 출력
		
		//System.out.println(students[1].isPassed());
		Student.printAllStudents(students);

		// 과목별 최대/최소 점수 및 해당 학생 출력
		Student.printSubjectStats(students);
	}
}

